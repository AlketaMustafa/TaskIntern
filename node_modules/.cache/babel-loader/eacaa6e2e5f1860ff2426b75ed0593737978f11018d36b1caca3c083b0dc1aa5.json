{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Berdyna Tech\\\\TaskIntern\\\\src\\\\components\\\\CharacterCard.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CharacterCard({\n  character,\n  language\n}) {\n  var _statusMap$character$, _speciesMap$character, _genderMap$character$;\n  const lang = language || 'en';\n  const statusMap = {\n    Alive: {\n      en: 'Alive',\n      de: 'Lebendig'\n    },\n    Dead: {\n      en: 'Dead',\n      de: 'Tot'\n    },\n    unknown: {\n      en: 'Unknown',\n      de: 'Unbekannt'\n    }\n  };\n  const speciesMap = {\n    Human: {\n      en: 'Human',\n      de: 'Mensch'\n    },\n    Alien: {\n      en: 'Alien',\n      de: 'Außerirdischer'\n    },\n    Robot: {\n      en: 'Robot',\n      de: 'Roboter'\n    }\n  };\n  const genderMap = {\n    Male: {\n      en: 'Male',\n      de: 'Männlich'\n    },\n    Female: {\n      en: 'Female',\n      de: 'Weiblich'\n    },\n    unknown: {\n      en: 'Unknown',\n      de: 'Unbekannt'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: character.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Status: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), ((_statusMap$character$ = statusMap[character.status]) === null || _statusMap$character$ === void 0 ? void 0 : _statusMap$character$[lang]) || character.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Species: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), ((_speciesMap$character = speciesMap[character.species]) === null || _speciesMap$character === void 0 ? void 0 : _speciesMap$character[lang]) || character.species]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Gender: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), ((_genderMap$character$ = genderMap[character.gender]) === null || _genderMap$character$ === void 0 ? void 0 : _genderMap$character$[lang]) || character.gender]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Origin: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), character.origin.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = CharacterCard;\nexport default CharacterCard;\nvar _c;\n$RefreshReg$(_c, \"CharacterCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CharacterCard","character","language","_statusMap$character$","_speciesMap$character","_genderMap$character$","lang","statusMap","Alive","en","de","Dead","unknown","speciesMap","Human","Alien","Robot","genderMap","Male","Female","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","status","species","gender","origin","_c","$RefreshReg$"],"sources":["C:/Users/Berdyna Tech/TaskIntern/src/components/CharacterCard.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction CharacterCard({ character, language }) {\r\n  const lang = language || 'en';\r\n\r\n  const statusMap = {\r\n    Alive: { en: 'Alive', de: 'Lebendig' },\r\n    Dead: { en: 'Dead', de: 'Tot' },\r\n    unknown: { en: 'Unknown', de: 'Unbekannt' },\r\n  };\r\n\r\n  const speciesMap = {\r\n    Human: { en: 'Human', de: 'Mensch' },\r\n    Alien: { en: 'Alien', de: 'Außerirdischer' },\r\n    Robot: { en: 'Robot', de: 'Roboter' },\r\n  };\r\n\r\n  const genderMap = {\r\n    Male: { en: 'Male', de: 'Männlich' },\r\n    Female: { en: 'Female', de: 'Weiblich' },\r\n    unknown: { en: 'Unknown', de: 'Unbekannt' },\r\n  };\r\n\r\n  return (\r\n    <div className=\"character-card\">\r\n      <h3>{character.name}</h3>\r\n      <p>\r\n        <strong>Status: </strong>\r\n        {statusMap[character.status]?.[lang] || character.status}\r\n      </p>\r\n      <p>\r\n        <strong>Species: </strong>\r\n        {speciesMap[character.species]?.[lang] || character.species}\r\n      </p>\r\n      <p>\r\n        <strong>Gender: </strong>\r\n        {genderMap[character.gender]?.[lang] || character.gender}\r\n      </p>\r\n      <p>\r\n        <strong>Origin: </strong>\r\n        {character.origin.name}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CharacterCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}