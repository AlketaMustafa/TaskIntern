{"ast":null,"code":"import React from\"react\";import{useQuery}from\"@apollo/client\";import{GET_CHARACTERS}from\"./graphql/queries\";import CharacterList from\"./components/CharacterList\";import Filter from\"./components/Filter\";import{useTranslation}from\"react-i18next\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const{t,i18n}=useTranslation();const{filters,setFilters}=useState({status:'',species:''});const{loading,error,data}=useQuery(GET_CHARACTERS,{variables:{status:filters.status,species:filters.species}});const handleFilterChange=(filterType,value)=>{setFilters(prev=>({...prev,[filterType]:value}));};const filteredCharacters=data?data.characters.results.filter(character=>{return(!filters.status||character.status===filters.status)&&(!filters.species||character.status===filters.species);}):[];if(loading)return/*#__PURE__*/_jsx(\"p\",{children:t('loading')});if(error)return/*#__PURE__*/_jsxs(\"p\",{children:[t('error'),\":\",error.message]});return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[t('Rick and Morty Characters'),\" \"]}),/*#__PURE__*/_jsx(Filter,{onFilterChange:handleFilterChange}),/*#__PURE__*/_jsx(CharacterList,{characters:filteredCharacters}),/*#__PURE__*/_jsxs(\"footer\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>i18n.changeLanguage('en'),children:\"English\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>i18n.changeLanguage('de'),children:\"Deutsch\"})]})]});}export default App;","map":{"version":3,"names":["React","useQuery","GET_CHARACTERS","CharacterList","Filter","useTranslation","jsx","_jsx","jsxs","_jsxs","App","t","i18n","filters","setFilters","useState","status","species","loading","error","data","variables","handleFilterChange","filterType","value","prev","filteredCharacters","characters","results","filter","character","children","message","className","onFilterChange","onClick","changeLanguage"],"sources":["C:/Users/Berdyna Tech/TaskIntern/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_CHARACTERS } from \"./graphql/queries\";\r\nimport CharacterList from \"./components/CharacterList\";\r\nimport Filter from \"./components/Filter\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n\r\nfunction App(){\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const { filters, setFilters} = useState({status: '', species: ''});\r\n\r\n    const { loading, error, data } = useQuery(GET_CHARACTERS,{\r\n        variables: { status: filters.status, species: filters.species},\r\n        });\r\n\r\n        const handleFilterChange = (filterType, value) => {\r\n            setFilters (prev => ({ ...prev, [filterType]: value}));\r\n        };\r\n        const filteredCharacters = data ? data.characters.results.filter((character) => {\r\n            return(\r\n                (!filters.status || character.status === filters.status) &&\r\n                (!filters.species || character.status === filters.species)\r\n            );\r\n        }) : [];\r\n\r\n\r\n    if(loading) return <p>{t('loading')}</p>;\r\n    if(error) return <p>{t('error')}:{error.message}</p>\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>{t('Rick and Morty Characters')} </h1>\r\n            <Filter onFilterChange={handleFilterChange} />\r\n            <CharacterList characters={filteredCharacters}/>\r\n            <footer>\r\n                <button onClick={() => i18n.changeLanguage('en')}>English</button>\r\n                <button onClick={() => i18n.changeLanguage('de')}>Deutsch</button>\r\n            </footer>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,gBAAgB,CACzC,OAASC,cAAc,KAAQ,mBAAmB,CAClD,MAAO,CAAAC,aAAa,KAAM,4BAA4B,CACtD,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,OAASC,cAAc,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAG/C,QAAS,CAAAC,GAAGA,CAAA,CAAE,CACV,KAAM,CAAEC,CAAC,CAAEC,IAAK,CAAC,CAAGP,cAAc,CAAC,CAAC,CAEpC,KAAM,CAAEQ,OAAO,CAAEC,UAAU,CAAC,CAAGC,QAAQ,CAAC,CAACC,MAAM,CAAE,EAAE,CAAEC,OAAO,CAAE,EAAE,CAAC,CAAC,CAElE,KAAM,CAAEC,OAAO,CAAEC,KAAK,CAAEC,IAAK,CAAC,CAAGnB,QAAQ,CAACC,cAAc,CAAC,CACrDmB,SAAS,CAAE,CAAEL,MAAM,CAAEH,OAAO,CAACG,MAAM,CAAEC,OAAO,CAAEJ,OAAO,CAACI,OAAO,CAC7D,CAAC,CAAC,CAEF,KAAM,CAAAK,kBAAkB,CAAGA,CAACC,UAAU,CAAEC,KAAK,GAAK,CAC9CV,UAAU,CAAEW,IAAI,GAAK,CAAE,GAAGA,IAAI,CAAE,CAACF,UAAU,EAAGC,KAAK,CAAC,CAAC,CAAC,CAC1D,CAAC,CACD,KAAM,CAAAE,kBAAkB,CAAGN,IAAI,CAAGA,IAAI,CAACO,UAAU,CAACC,OAAO,CAACC,MAAM,CAAEC,SAAS,EAAK,CAC5E,MACI,CAAC,CAACjB,OAAO,CAACG,MAAM,EAAIc,SAAS,CAACd,MAAM,GAAKH,OAAO,CAACG,MAAM,IACtD,CAACH,OAAO,CAACI,OAAO,EAAIa,SAAS,CAACd,MAAM,GAAKH,OAAO,CAACI,OAAO,CAAC,CAElE,CAAC,CAAC,CAAG,EAAE,CAGX,GAAGC,OAAO,CAAE,mBAAOX,IAAA,MAAAwB,QAAA,CAAIpB,CAAC,CAAC,SAAS,CAAC,CAAI,CAAC,CACxC,GAAGQ,KAAK,CAAE,mBAAOV,KAAA,MAAAsB,QAAA,EAAIpB,CAAC,CAAC,OAAO,CAAC,CAAC,GAAC,CAACQ,KAAK,CAACa,OAAO,EAAI,CAAC,CAEpD,mBACIvB,KAAA,QAAKwB,SAAS,CAAC,KAAK,CAAAF,QAAA,eAChBtB,KAAA,OAAAsB,QAAA,EAAKpB,CAAC,CAAC,2BAA2B,CAAC,CAAC,GAAC,EAAI,CAAC,cAC1CJ,IAAA,CAACH,MAAM,EAAC8B,cAAc,CAAEZ,kBAAmB,CAAE,CAAC,cAC9Cf,IAAA,CAACJ,aAAa,EAACwB,UAAU,CAAED,kBAAmB,CAAC,CAAC,cAChDjB,KAAA,WAAAsB,QAAA,eACIxB,IAAA,WAAQ4B,OAAO,CAAEA,CAAA,GAAMvB,IAAI,CAACwB,cAAc,CAAC,IAAI,CAAE,CAAAL,QAAA,CAAC,SAAO,CAAQ,CAAC,cAClExB,IAAA,WAAQ4B,OAAO,CAAEA,CAAA,GAAMvB,IAAI,CAACwB,cAAc,CAAC,IAAI,CAAE,CAAAL,QAAA,CAAC,SAAO,CAAQ,CAAC,EAC9D,CAAC,EAER,CAAC,CAEd,CACA,cAAe,CAAArB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}