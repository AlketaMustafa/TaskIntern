{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Berdyna Tech\\\\TaskIntern\\\\src\\\\components\\\\CharacterCard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CharacterCard({\n  character\n}) {\n  _s();\n  var _statusMap$character$, _speciesMap$character, _genderMap$character$;\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const statusMap = {\n    Alive: {\n      en: 'Alive',\n      de: 'Lebendig'\n    },\n    Dead: {\n      en: 'Dead',\n      de: 'Tot'\n    },\n    unknown: {\n      en: 'Unknown',\n      de: 'Unbekannt'\n    }\n  };\n  const speciesMap = {\n    Human: {\n      en: 'Human',\n      de: 'Mensch'\n    },\n    Alien: {\n      en: 'Alien',\n      de: 'Außerirdischer'\n    },\n    Robot: {\n      en: 'Robot',\n      de: 'Roboter'\n    }\n  };\n  const genderMap = {\n    Male: {\n      en: 'Male',\n      de: 'Männlich'\n    },\n    Female: {\n      en: 'Female',\n      de: 'Weiblich'\n    },\n    unknown: {\n      en: 'Unknown',\n      de: 'Unbekannt'\n    }\n  };\n  const lang = i18n.language || 'en';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: character.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Status: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), ((_statusMap$character$ = statusMap[character.status]) === null || _statusMap$character$ === void 0 ? void 0 : _statusMap$character$[lang]) || character.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Species: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), ((_speciesMap$character = speciesMap[character.species]) === null || _speciesMap$character === void 0 ? void 0 : _speciesMap$character[lang]) || character.species]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Gender: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), ((_genderMap$character$ = genderMap[character.gender]) === null || _genderMap$character$ === void 0 ? void 0 : _genderMap$character$[lang]) || character.gender]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Origin: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), character.origin.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(CharacterCard, \"OZwazanA59tbNDUkc8lMSmTHj9Q=\", false, function () {\n  return [useTranslation];\n});\n_c = CharacterCard;\nexport default CharacterCard;\nvar _c;\n$RefreshReg$(_c, \"CharacterCard\");","map":{"version":3,"names":["React","useTranslation","jsxDEV","_jsxDEV","CharacterCard","character","_s","_statusMap$character$","_speciesMap$character","_genderMap$character$","t","i18n","statusMap","Alive","en","de","Dead","unknown","speciesMap","Human","Alien","Robot","genderMap","Male","Female","lang","language","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","status","species","gender","origin","_c","$RefreshReg$"],"sources":["C:/Users/Berdyna Tech/TaskIntern/src/components/CharacterCard.js"],"sourcesContent":["import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction CharacterCard({ character }) {\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const statusMap = {\r\n    Alive: {\r\n      en: 'Alive',\r\n      de: 'Lebendig',\r\n    },\r\n    Dead: {\r\n      en: 'Dead',\r\n      de: 'Tot',\r\n    },\r\n    unknown: {\r\n      en: 'Unknown',\r\n      de: 'Unbekannt',\r\n    },\r\n  };\r\n\r\n  const speciesMap = {\r\n    Human: {\r\n      en: 'Human',\r\n      de: 'Mensch',\r\n    },\r\n    Alien: {\r\n      en: 'Alien',\r\n      de: 'Außerirdischer',\r\n    },\r\n    Robot: {\r\n      en: 'Robot',\r\n      de: 'Roboter',\r\n    },\r\n  };\r\n\r\n  const genderMap = {\r\n    Male: {\r\n      en: 'Male',\r\n      de: 'Männlich',\r\n    },\r\n    Female: {\r\n      en: 'Female',\r\n      de: 'Weiblich',\r\n    },\r\n    unknown: {\r\n      en: 'Unknown',\r\n      de: 'Unbekannt',\r\n    },\r\n  };\r\n\r\n  const lang = i18n.language || 'en';\r\n\r\n  return (\r\n    <div className=\"character-card\">\r\n      <h3>{character.name}</h3>\r\n      <p>\r\n        <strong>Status: </strong>\r\n        {statusMap[character.status]?.[lang] || character.status}\r\n      </p>\r\n      <p>\r\n        <strong>Species: </strong>\r\n        {speciesMap[character.species]?.[lang] || character.species}\r\n      </p>\r\n      <p>\r\n        <strong>Gender: </strong>\r\n        {genderMap[character.gender]?.[lang] || character.gender}\r\n      </p>\r\n      <p>\r\n        <strong>Origin: </strong>\r\n        {character.origin.name}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CharacterCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}