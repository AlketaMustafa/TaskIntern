{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Berdyna Tech\\\\TaskIntern\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_CHARACTERS } from \"./graphql/queries.graphql\";\nimport CharacterList from \"./components/CharacterList\";\nimport Filter from \"./components/Filter\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  async function getData() {\n    try {\n      const response = await fetch('https://rickandmortyapi.com/api');\n      const data = await response.json();\n    } catch (error) {\n      console.error('Fetch error:', error);\n    }\n  }\n  async function fetchCharacterData() {\n    try {\n      const res = await fetch('https://rickandmortyapi.com/api/character');\n      const data = await res.json();\n      return data.results;\n    } catch (err) {\n      console.error('❌ Error fetching character data:', err);\n      return [];\n    }\n  }\n  const [characters, setCharacters] = useState([]);\n  useEffect(() => {\n    const loadCharacters = async () => {\n      const characterData = await fetchCharacterData();\n      setCharacters(characterData);\n    };\n    void loadCharacters();\n  }, []);\n  console.log('MAPPING DATA', characters);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [t('Rick and Morty Characters'), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CharacterList, {\n      characters: filteredCharacters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => i18n.changeLanguage('en'),\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => i18n.changeLanguage('de'),\n        children: \"Deutsch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"YvBY34tXL5U2qcl7hCcgBkcsjUM=\", false, function () {\n  return [useTranslation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useQuery","GET_CHARACTERS","CharacterList","Filter","useTranslation","jsxDEV","_jsxDEV","App","_s","t","i18n","getData","response","fetch","data","json","error","console","fetchCharacterData","res","results","err","characters","setCharacters","useEffect","loadCharacters","characterData","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilterChange","handleFilterChange","filteredCharacters","onClick","changeLanguage","_c","$RefreshReg$"],"sources":["C:/Users/Berdyna Tech/TaskIntern/src/App.js"],"sourcesContent":["import React , { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_CHARACTERS } from \"./graphql/queries.graphql\";\r\nimport CharacterList from \"./components/CharacterList\";\r\nimport Filter from \"./components/Filter\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n\r\nfunction App(){\r\n    const { t, i18n } = useTranslation();\r\n\r\n    async function getData() {\r\n        try {\r\n          const response = await fetch('https://rickandmortyapi.com/api')\r\n          const data = await response.json()\r\n         \r\n        } catch (error) {\r\n          console.error('Fetch error:', error)\r\n        }\r\n      }\r\n    \r\n      async function fetchCharacterData() {\r\n        try {\r\n          const res = await fetch('https://rickandmortyapi.com/api/character')\r\n          const data = await res.json()\r\n          return data.results\r\n        } catch (err) {\r\n          console.error('❌ Error fetching character data:', err)\r\n          return []\r\n        }\r\n      }\r\n    \r\n      const [characters, setCharacters] = useState([])\r\n    \r\n      useEffect(() => {\r\n        const loadCharacters = async () => {\r\n          const characterData = await fetchCharacterData()\r\n          setCharacters(characterData)\r\n        }\r\n    \r\n        void loadCharacters()\r\n      }, [])\r\n    \r\n      console.log('MAPPING DATA', characters)\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>{t('Rick and Morty Characters')} </h1>\r\n            <Filter onFilterChange={handleFilterChange} />\r\n            <CharacterList characters={filteredCharacters}/>\r\n            <footer>\r\n                <button onClick={() => i18n.changeLanguage('en')}>English</button>\r\n                <button onClick={() => i18n.changeLanguage('de')}>Deutsch</button>\r\n            </footer>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}