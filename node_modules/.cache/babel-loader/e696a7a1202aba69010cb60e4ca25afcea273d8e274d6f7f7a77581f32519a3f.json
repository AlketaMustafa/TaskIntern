{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Berdyna Tech\\\\TaskIntern\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_CHARACTERS } from \"./graphql/queries.graphql\";\nimport CharacterList from \"./components/CharacterList\";\nimport Filter from \"./components/Filter\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  async function getData() {\n    try {\n      const response = await fetch('https://rickandmortyapi.com/api');\n      const data = await response.json();\n    } catch (error) {\n      console.error('Fetch error:', error);\n    }\n  }\n  async function checkAllEndpoints() {\n    const baseData = {\n      characters: 'https://rickandmortyapi.com/api/character',\n      locations: 'https://rickandmortyapi.com/api/location',\n      episodes: 'https://rickandmortyapi.com/api/episode'\n    };\n    for (const [key, url] of Object.entries(baseData)) {\n      try {\n        const res = await fetch(url);\n        const data = await res.json();\n        console.log(`üí• ${key.toUpperCase()} DATA:`, data);\n      } catch (err) {\n        console.error(`‚ùå Error fetching ${key}:`, err);\n      }\n    }\n  }\n  void checkAllEndpoints();\n  void getData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [t('Rick and Morty Characters'), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CharacterList, {\n      characters: filteredCharacters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => i18n.changeLanguage('en'),\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => i18n.changeLanguage('de'),\n        children: \"Deutsch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"OZwazanA59tbNDUkc8lMSmTHj9Q=\", false, function () {\n  return [useTranslation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useQuery","GET_CHARACTERS","CharacterList","Filter","useTranslation","jsxDEV","_jsxDEV","App","_s","t","i18n","getData","response","fetch","data","json","error","console","checkAllEndpoints","baseData","characters","locations","episodes","key","url","Object","entries","res","log","toUpperCase","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilterChange","handleFilterChange","filteredCharacters","onClick","changeLanguage","_c","$RefreshReg$"],"sources":["C:/Users/Berdyna Tech/TaskIntern/src/App.js"],"sourcesContent":["import React , { useState } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_CHARACTERS } from \"./graphql/queries.graphql\";\r\nimport CharacterList from \"./components/CharacterList\";\r\nimport Filter from \"./components/Filter\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n\r\nfunction App(){\r\n    const { t, i18n } = useTranslation();\r\n\r\n    async function getData() {\r\n        try {\r\n          const response = await fetch('https://rickandmortyapi.com/api')\r\n          const data = await response.json()\r\n         \r\n        } catch (error) {\r\n          console.error('Fetch error:', error)\r\n        }\r\n      }\r\n    \r\n      async function checkAllEndpoints() {\r\n        const baseData = {\r\n          characters: 'https://rickandmortyapi.com/api/character',\r\n          locations: 'https://rickandmortyapi.com/api/location',\r\n          episodes: 'https://rickandmortyapi.com/api/episode',\r\n        }\r\n    \r\n        for (const [key, url] of Object.entries(baseData)) {\r\n          try {\r\n            const res = await fetch(url)\r\n            const data = await res.json()\r\n            console.log(`üí• ${key.toUpperCase()} DATA:`, data)\r\n          } catch (err) {\r\n            console.error(`‚ùå Error fetching ${key}:`, err)\r\n          }\r\n        }\r\n      }\r\n    \r\n      void checkAllEndpoints()\r\n    \r\n      void getData()\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>{t('Rick and Morty Characters')} </h1>\r\n            <Filter onFilterChange={handleFilterChange} />\r\n            <CharacterList characters={filteredCharacters}/>\r\n            <footer>\r\n                <button onClick={() => i18n.changeLanguage('en')}>English</button>\r\n                <button onClick={() => i18n.changeLanguage('de')}>Deutsch</button>\r\n            </footer>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}