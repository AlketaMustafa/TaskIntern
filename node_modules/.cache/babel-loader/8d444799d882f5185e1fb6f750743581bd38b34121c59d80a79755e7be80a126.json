{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Berdyna Tech\\\\TaskIntern\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_CHARACTERS } from \"./graphql/queries\";\nimport CharacterList from \"./components/CharacterList\";\nimport Filter from \"./components/Filter\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const {\n    filters,\n    setFilters\n  } = useState({\n    status: '',\n    species: ''\n  });\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_CHARACTERS, {\n    variables: {\n      status: filters.status,\n      species: filters.species\n    }\n  });\n  const handleFilterChange = (filterType, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [filterType]: value\n    }));\n  };\n  const filteredCharacters = data ? data.characters.results.filter(character => {\n    return (!filters.status || character.status === filters.status) && (!filters.species || character.status === filters.species);\n  }) : [];\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: t('loading')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [t('error'), \":\", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [t('Rick and Morty Characters'), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CharacterList, {\n      characters: filteredCharacters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => i18n.changeLanguage('en'),\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => i18n.changeLanguage('de'),\n        children: \"Deutsch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Il5oJR2RykjP/SKoLd9j9i1vi+c=\", false, function () {\n  return [useTranslation, useQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useQuery","GET_CHARACTERS","CharacterList","Filter","useTranslation","jsxDEV","_jsxDEV","App","_s","t","i18n","filters","setFilters","useState","status","species","loading","error","data","variables","handleFilterChange","filterType","value","prev","filteredCharacters","characters","results","filter","character","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","onFilterChange","onClick","changeLanguage","_c","$RefreshReg$"],"sources":["C:/Users/Berdyna Tech/TaskIntern/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_CHARACTERS } from \"./graphql/queries\";\r\nimport CharacterList from \"./components/CharacterList\";\r\nimport Filter from \"./components/Filter\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n\r\nfunction App(){\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const { filters, setFilters} = useState({status: '', species: ''});\r\n\r\n    const { loading, error, data } = useQuery(GET_CHARACTERS,{\r\n        variables: { status: filters.status, species: filters.species},\r\n        });\r\n\r\n        const handleFilterChange = (filterType, value) => {\r\n            setFilters (prev => ({ ...prev, [filterType]: value}));\r\n        };\r\n        const filteredCharacters = data ? data.characters.results.filter((character) => {\r\n            return(\r\n                (!filters.status || character.status === filters.status) &&\r\n                (!filters.species || character.status === filters.species)\r\n            );\r\n        }) : [];\r\n\r\n\r\n    if(loading) return <p>{t('loading')}</p>;\r\n    if(error) return <p>{t('error')}:{error.message}</p>\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>{t('Rick and Morty Characters')} </h1>\r\n            <Filter onFilterChange={handleFilterChange} />\r\n            <CharacterList characters={filteredCharacters}/>\r\n            <footer>\r\n                <button onClick={() => i18n.changeLanguage('en')}>English</button>\r\n                <button onClick={() => i18n.changeLanguage('de')}>Deutsch</button>\r\n            </footer>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}