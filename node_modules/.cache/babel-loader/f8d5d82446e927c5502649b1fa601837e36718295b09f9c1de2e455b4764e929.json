{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Berdyna Tech\\\\TaskIntern\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport CharacterList from \"./components/CharacterList\";\nimport CharacterFilter from './components/CharacterFilter';\n// import '/.i18n';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const { t, i18n } = useTranslation();\n  const [characters, setCharacters] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filteredCharacters, setFilteredCharacters] = useState([]);\n  const [language, setLanguage] = useState('en');\n  async function fetchCharacterData() {\n    try {\n      const res = await fetch(\"https://rickandmortyapi.com/api/character\");\n      const data = await res.json();\n      return data.results || [];\n    } catch (err) {\n      console.error(\"Error fetching character data:\", err);\n      return [];\n    }\n  }\n}\n_s(App, \"Xlq1K35dmH/yqGv4BZBU8A0/W4o=\");\n_c = App;\nuseEffect(() => {\n  const loadCharacters = async () => {\n    const characterData = await fetchCharacterData();\n    setCharacters(characterData);\n    setFilteredCharacters(characterData);\n    setLoading(false);\n  };\n  void loadCharacters();\n}, []);\nconst handleFilterChange = ({\n  status,\n  specie\n}) => {\n  console.log(\"its calling \");\n  const filteredCharacters = characters.filter(character => {\n    const statusFiltered = status ? character.status === status : true;\n    const specieFiltered = specie ? character.specie === specie : true;\n    return statusFiltered && specieFiltered;\n  });\n  console.log(\"filteredCharacters\", filteredCharacters);\n  setFilteredCharacters(filteredCharacters);\n};\nconst isGermanLanguage = language === 'de';\n/*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"App\",\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: isGermanLanguage ? 'Rick und Morty Figuren' : 'Rick and Morty Characters'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(CharacterFilter, {\n    onFilterChange: handleFilterChange,\n    language: language\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n    children: isGermanLanguage ? 'Wird geladen...' : 'Loading...'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(CharacterList, {\n    characters: filteredCharacters,\n    language: language\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setLanguage('en'),\n      children: isGermanLanguage ? 'Englisch' : 'English'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setLanguage('de'),\n      children: isGermanLanguage ? 'Deutsch' : 'German'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 5\n}, this);\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useTranslation","CharacterList","CharacterFilter","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","loading","setLoading","filteredCharacters","setFilteredCharacters","language","setLanguage","fetchCharacterData","res","fetch","data","json","results","err","console","error","_c","loadCharacters","characterData","handleFilterChange","status","specie","log","filter","character","statusFiltered","specieFiltered","isGermanLanguage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilterChange","onClick","$RefreshReg$"],"sources":["C:/Users/Berdyna Tech/TaskIntern/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CharacterList from \"./components/CharacterList\";\r\nimport CharacterFilter from './components/CharacterFilter'\r\n// import '/.i18n';\r\n\r\nfunction App() {\r\n  // const { t, i18n } = useTranslation();\r\n  const [characters, setCharacters] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [filteredCharacters, setFilteredCharacters] = useState([])\r\n  const [language, setLanguage] = useState('en')\r\n  async function fetchCharacterData() {\r\n    try {\r\n      const res = await fetch(\"https://rickandmortyapi.com/api/character\");\r\n      const data = await res.json();\r\n      return data.results || [];\r\n    } catch (err) {\r\n      console.error(\"Error fetching character data:\", err);\r\n      return [];\r\n    }\r\n  }\r\n}\r\n  useEffect(() => {\r\n    const loadCharacters = async () => {\r\n      const characterData = await fetchCharacterData();\r\n      setCharacters(characterData);\r\n      setFilteredCharacters(characterData);\r\n      setLoading(false);\r\n    };\r\n    void loadCharacters();\r\n  }, []);\r\n  \r\n  const handleFilterChange=({status, specie})=>{\r\n    console.log(\"its calling \")\r\n  const filteredCharacters = characters.filter((character)=>{\r\n    const statusFiltered= status? character.status === status : true;\r\n    const specieFiltered = specie? character.specie === specie :true;\r\n    return statusFiltered && specieFiltered\r\n  });\r\n\r\n  console.log(\"filteredCharacters\", filteredCharacters)\r\n  setFilteredCharacters(filteredCharacters);\r\n\r\n  }\r\n  \r\n  const isGermanLanguage = language==='de';\r\n\r\n    <div className=\"App\">\r\n      <h1>{isGermanLanguage? 'Rick und Morty Figuren' : 'Rick and Morty Characters'}</h1>\r\n    \r\n      <CharacterFilter onFilterChange={handleFilterChange} language={language}/>\r\n      {loading ? (\r\n        <p>{isGermanLanguage? 'Wird geladen...': 'Loading...'}</p>\r\n      ) : (\r\n        <CharacterList characters={filteredCharacters} language={language} />\r\n      )}\r\n      <footer>\r\n        <button  onClick={() => setLanguage('en')}>{isGermanLanguage? 'Englisch': 'English'}</button>\r\n        <button onClick={() =>setLanguage('de')}>{isGermanLanguage? 'Deutsch': 'German'}</button>\r\n      </footer>\r\n    </div>\r\n  ;\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}